#create a ROS package 
catkin_create_pkg "package name" std_msgs rospy
catkin_make 
source devel/setup.bash

#make a simple velocity publisher for the TurtleBot3
#!/usr/bin/env python
import rospy
from geometry_msgs.msg import Twist

rospy.init_node('velocity_publisher')
vel_pub = rospy.Publisher('/cmd_vel', Twist, queue_size = 10)
move = Twist()

v = .5
w = .5

def move_vel():
	rate = rospy.Rate(10)
	move.linear.x = v
	move.angular.z = w
	i = 0
	while not rospy.is_shutdown():
		vel_pub.publish(move)
		print("v = " + str(move.linear.x) +",", " w = " + str(move.angular.z))
		rate.sleep()

if __name__ == '__main__':
	try:
		move_vel()
	except rospy.ROSInterruptException:
        	pass
	

#make a launch file
<launch>
  <node name="" pkg="" type=".py" output="screen"/>
  <node name="" pkg="" type=".py" output="screen"/>
</launch>

#Connect to a TurtleBot3
on Raspberry Pi:
	username = ubuntu
	password = turtlebot
	
	#update Host and Raspberry Pi IP 
	nano ~/.bashrc
	
	#update wifi connection
	cd /etc/netplan
	sudo nano 50-cloud-init.yaml
	#set static IP
	dhcp4: no
	addresses: [xxx.xxx.xxx.xxx/24] #in 50-cloud-init.yaml add this line where xxx.xxx.xxx.xxx is your static IP (follow the IP labeling convention in the Lab)
	
on Host Machine:
	#connect to TurtleBot and initialize subscribers
	ssh ubuntu@{Raspberry Pi IP}
	roslaunch turtlebot3_bringup turtlebot3.robot.launch
	
	#scan for all wifi connections
	sudo arp-scan -l
	
#run rvis with LIDAR
roslaunch turtlebot3_gazebo turtlebot3_house.launch
roslaunch turtlebot3_gazebo turtlebot3_gazebo_rviz.launch
	
#SD repository
https://github.com/frankllawless/Senior-Design.git

